name: ci-cd
on:
  pull_request:
  push:
    branches: [main]

jobs:
  test_and_build_front:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      - name: Install deps
        run: npm ci

      # если тестов нет — закомментируй блоки test/coverage
      - name: Run tests (Vitest/Jest) with coverage
        run: |
          npm run test --if-present -- --coverage --run
          # ожидаем lcov в coverage/lcov.info

      - name: SonarCloud scan
        uses: SonarSource/sonarcloud-github-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: .

      - name: Build app (for local verification)
        run: npm run build

  build_and_push_image:
    needs: [test_and_build_front]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}
          provenance: true

  deploy_to_vps:
    needs: [build_and_push_image]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          port: ${{ secrets.VPS_PORT || 22 }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            set -e

            APP_DIR=/root/crypto-signal-desk

      # дать право прохода в /root и подготовить папку проекта
            if ! command -v setfacl >/dev/null 2>&1; then
            sudo apt-get update -y && sudo apt-get install -y acl
            fi
            sudo setfacl -m u:$(id -un):--x /root || true
            sudo mkdir -p "$APP_DIR"
            sudo chown -R $(id -un):$(id -gn) "$APP_DIR"

      # клонирование/обновление кода
            if [ ! -d "$APP_DIR/.git" ]; then
            git clone https://github.com/${{ github.repository }}.git "$APP_DIR"
            fi
            cd "$APP_DIR"
            git fetch origin main
            git reset --hard origin/main

      # docker с учётом прав
            if docker ps >/dev/null 2>&1; then DOCKER="docker"; else DOCKER="sudo docker"; fi
            $DOCKER compose up -d --build
            $DOCKER image prune -f
